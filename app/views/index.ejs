<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Cuộc thi lập trinh robot 2024</title>
    <link rel="stylesheet" href="/css/index.css" />
    <link rel="stylesheet" href="/css/common.css" />
  </head>
  <body>
    <div id="title">
      <div class="logo-box">
        <div class="logo">
          <img src="/images/logo_PTIT.png" />
        </div>
        <div class="logo">
          <img src="/images/logokhoadt.png" />
        </div>
      </div>
      <div class="text-title">
        <h1>Vòng sơ loại cuộc thi lập trình robot 2024</h1>
        <p>Khoa kỹ thuật Điện tử I</p>
      </div>
    </div>
    <div class="content">
      <div class="team" id="team-1">
        <div class="gate-container">
          <span class="gate">
            <p>Cổng 1</p>
          </span>
        </div>
        <div class="score-container">
          <div class="avatar">
            <img src="/images/logo-team/1.jpg" id="avatar-team-1" />
            <button
              id="name-team-1"
              onclick="togglePopupSelectTeam('select-team-1')"
            >
              Đội Bla bla
            </button>
            <div class="dropdown" id="select-team-1"></div>
          </div>
          <div class="score">
            <button class="score-time" id="score-1-1">00:00</button>
            <button class="score-time" id="score-1-2">00:00</button>
            <button class="score-time" id="score-1-3">00:00</button>
          </div>
        </div>
      </div>
      <div class="team" id="team-2">
        <div class="gate-container">
          <span class="gate">
            <p>Cổng 2</p>
          </span>
        </div>
        <div class="score-container">
          <div class="score">
            <button class="score-time" id="score-2-1">00:00</button>
            <button class="score-time" id="score-2-2">00:00</button>
            <button class="score-time" id="score-2-3">00:00</button>
          </div>
          <div class="avatar">
            <img src="/images/logo-team/1.jpg" id="avatar-team-2" />
            <button
              id="name-team-2"
              onclick="togglePopupSelectTeam('select-team-2')"
            >
              Đội Bla bla
            </button>
            <div class="dropdown" id="select-team-2"></div>
          </div>
        </div>
      </div>
    </div>
  </body>
  <script>
    // CONSTANTS
    const listTeam = [
      {
        name: "Đội 1",
        avatar: "/images/logo-team/1.jpg",
      },
      {
        name: "Đội 2",
        avatar: "/images/logo-team/1.jpg",
      },
      {
        name: "Đội 3",
        avatar: "/images/logo-team/1.jpg",
      },
      {
        name: "Đội 4",
        avatar: "/images/logo-team/1.jpg",
      },
    ];
    let team1 = listTeam[0];
    let team2 = listTeam[1];
    let timeStartTeam1 = null;
    let timeStartTeam2 = null;
    let intervalClockTeam1 = null;
    let intervalClockTeam2 = null;
    // Define DOM
    let avatarTeam1Element = null;
    let nameTeam1Element = null;
    let scoreTeam1_1 = null;
    let scoreTeam1_2 = null;
    let scoreTeam1_3 = null;
    let timeRunningTeam1Element = null;
    let avatarTeam2Element = null;
    let nameTeam1E2ement = null;
    let scoreTeam2_1 = null;
    let scoreTeam2_2 = null;
    let scoreTeam2_3 = null;
    let timeRunningTeam2Element = null;
    // handle when init
    document.addEventListener("DOMContentLoaded", function () {
      // Define DOM
      avatarTeam1Element = document.getElementById("avatar-team-1");
      nameTeam1Element = document.getElementById("name-team-1");
      scoreTeam1_1 = document.getElementById("score-1-1");
      scoreTeam1_2 = document.getElementById("score-1-2");
      scoreTeam1_3 = document.getElementById("score-1-3");
      avatarTeam2Element = document.getElementById("avatar-team-2");
      nameTeam1E2ement = document.getElementById("name-team-2");
      scoreTeam2_1 = document.getElementById("score-2-1");
      scoreTeam2_2 = document.getElementById("score-2-2");
      scoreTeam2_3 = document.getElementById("score-2-3");

      for (const iterator of listTeam) {
        appendTeamOption("select-team-1", "button", iterator);
        appendTeamOption("select-team-2", "button", iterator);
      }
      // update avatar
      const avatarTeam1 = document.getElementById("avatar-team-1");
      avatarTeam1.src = team1.avatar;
      const avatarTeam2 = document.getElementById("avatar-team-2");
      avatarTeam2.src = team2.avatar;
    });

    // HANDLE UI
    function togglePopupSelectTeam(id) {
      const dropdownDom = document.getElementById(id);
      if (dropdownDom) {
        dropdownDom.classList.toggle("active");
      }
    }
    function changeHtmlContent(dom, newContent) {
      if (!dom) return;
      dom.innerHTML = newContent;
    }
    function changeHtmlContentById(id, newContent) {
      const dom = document.getElementById(id);
      if (!dom) return;
      dom.innerHTML = newContent;
    }
    function appendChild(parentElementId, tag, content) {
      const parentElement = document.getElementById(parentElementId);
      if (!parentElement) return;
      const newElement = document.createElement(tag);
      newElement.textContent = content;
      parentElement.appendChild(newElement);
    }
    function appendTeamOption(parentElementId, tag, team) {
      const parentElement = document.getElementById(parentElementId);
      if (!parentElement) return;
      const newElement = document.createElement(tag);
      newElement.textContent = team.name;
      newElement.addEventListener("click", choiceTeam);
      parentElement.appendChild(newElement);
    }
    function choiceTeam(e) {
      const parentId = e.target.parentNode.id;
      const teamNameSelected = e.target.innerHTML;
      const teamSelected = listTeam.find(
        (item) => item.name === teamNameSelected
      );
      if (!teamSelected) return;
      if (parentId == "select-team-1") {
        team1 = teamSelected;
        avatarTeam1Element.src = teamSelected.avatar;
        nameTeam1Element.innerHTML = teamSelected.name;
      } else {
        team2 = teamSelected;
        avatarTeam2Element.src = teamSelected.avatar;
        nameTeam2Element.innerHTML = teamSelected.name;
      }
      console.log(getParentId, teamSelected);
    }
    function loadTimeStoraged(params) {}

    // HANDLE FUNCTION
    function getTimeNow() {
      return Date.now();
    }
    // Tạo kết nối WebSocket
    const ws = new WebSocket("ws://localhost:9088");

    // Khi kết nối thành công
    ws.onopen = function (event) {
      console.log("Connected to WebSocket server");
    };

    // Khi nhận được dữ liệu từ WebSocket
    ws.onmessage = function (event) {
      const data = JSON.parse(event.data);
      console.log(data);
      if (data.topic === "update-match-result") {
        updateMatchResult(data);
      }
      displayMessage();
    };

    // Hiển thị dữ liệu nhận được từ WebSocket
    function updateMatchResult(data) {
      const id = data.id;
      const status = data.status;
      if (!id || !status) {
        return;
      }
      if (id === "door1") {
        if (status === "start") {
          timeStartTeam1 = getTimeNow();
          timeRunningTeam1Element = getBlockRunningEmpty("team-1");
          if (!timeRunningTeam1Element) return;
          intervalClockTeam1 = setInterval(() => {
            now = getTimeNow();
            timeRunningTeam1Element.innerHTML = getTimeRunningSTring(
              timeStartTeam1,
              now
            );
          }, 250);
        }
        if (status === "stop") {
          const stopTime = getTimeNow();
          if (!timeStartTeam1) {
            console.error(`Không thấy thời gian start ${id}`);
          }
          const timeRunning = getTimeRunningSTring(timeStartTeam1, stopTime);
          if (timeRunningTeam1Element) {
            timeRunningTeam1Element.innerHTML = timeRunning;
          }
          clearInterval(intervalClockTeam1);
          const dataSave = {
            team: team1.name,
            timeStart: timestampToTimeString(timeStartTeam1),
            timeStop: timestampToTimeString(stopTime),
            timeRunningMs: stopTime - timeStartTeam1,
            timeRunningString: timeRunning,
          };
          saveDataToStorage(id, dataSave);
        }
      }
      if (id === "door2") {
        if (status === "start") {
          timeStartTeam2 = getTimeNow();
          timeRunningTeam2Element = getBlockRunningEmpty("team-2");
          if (!timeRunningTeam2Element) return;
          intervalClockTeam2 = setInterval(() => {
            now = getTimeNow();
            timeRunningTeam2Element.innerHTML = getTimeRunningSTring(
              timeStartTeam2,
              now
            );
          }, 250);
        }
        if (status === "stop") {
          const stopTime = getTimeNow();
          if (!timeStartTeam2) {
            console.error(`Không thấy thời gian start ${id}`);
          }
          const timeRunning = getTimeRunningSTring(timeStartTeam2, stopTime);
          if (timeRunningTeam2Element) {
            timeRunningTeam2Element.innerHTML = timeRunning;
          }
          clearInterval(intervalClockTeam2);
          const dataSave = {
            team: team2.name,
            timeStart: timestampToTimeString(timeStartTeam2),
            timeStop: timestampToTimeString(stopTime),
            timeRunningMs: stopTime - timeStartTeam2,
            timeRunningString: timeRunning,
          };
          saveDataToStorage(id, dataSave);
        }
      }
    }

    function timestampToTimeString(timestamp) {
      const date = new Date(timestamp);
      const hours = date.getHours().toString().padStart(2, "0");
      const minutes = date.getMinutes().toString().padStart(2, "0");
      const seconds = date.getSeconds().toString().padStart(2, "0");
      return `${hours}:${minutes}:${seconds}`;
    }

    function saveDataToStorage(id, data) {
      const dataStorageString = localStorage.getItem(id);
      const dataStorageObject = dataStorageString
        ? JSON.parse(dataStorageString)
        : [];
      dataStorageObject.push(data);
      localStorage.setItem(id, JSON.stringify(dataStorageObject));
    }

    function getBlockRunningEmpty(team) {
      const teamBlock = document.getElementById(team);
      if (!teamBlock) return null;
      const listScoreTimeBlock = teamBlock.getElementsByClassName("score-time");
      for (let i = 0; i < listScoreTimeBlock.length; i++) {
        if (listScoreTimeBlock[i].innerHTML.trim() === "00:00") {
          return listScoreTimeBlock[i];
        }
      }
    }

    function getTimeRunningSTring(startTime, stopTime) {
      const timeRunning = stopTime - startTime;
      let numberOfSecond = Math.floor(timeRunning / 1000);
      const numberOfMinus = Math.floor(numberOfSecond / 60);
      numberOfSecond = numberOfSecond - numberOfMinus * 60;
      return `${numberOfMinus.toString().padStart(2, "0")}:${numberOfSecond
        .toString()
        .padStart(2, "0")}`;
    }
  </script>
</html>
